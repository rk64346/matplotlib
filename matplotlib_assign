{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "2e609e4e-a830-4ab8-9737-7465ce45d49e",
   "metadata": {},
   "source": [
    "Q1: What is Matplotlib? Why is it used? Name five plots that can be plotted using the Pyplot module of\n",
    "Matplotlib."
   ]
  },
  {
   "cell_type": "raw",
   "id": "8b09d2ab-6cff-428a-9d04-03d114f0503e",
   "metadata": {},
   "source": [
    "matplotlib is a python libraray wheere it can convert data in vizulizing chart and dipict the fact in chart form, \n",
    "it is uesed to create chart and vizulizing graphs\n",
    "example of plots: bar,histogram,pie,scattring,3d charts"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e81cc020-a2e2-4a13-9f44-f2fff1aecea7",
   "metadata": {},
   "source": [
    "Q2: What is a scatter plot? Use the following code to generate data for x and y. Using this generated data\n",
    "plot a scatter plot."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "c39d5c6c-a300-46e4-b3b6-267abde756a8",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "np.random.seed(3)\n",
    "x = 3 + np.random.normal(0, 2, 50)\n",
    "y = 3 + np.random.normal(0, 2, len(x))\n",
    "#Note: Also add title, xlabel, and ylabel to the plot."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "6517070f-77b3-4fca-b32b-9b017a904bc9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 6.57725695,  3.8730197 ,  3.19299494, -0.72698541,  2.44522359,\n",
       "        2.29048204,  2.83451704,  1.74599865,  2.91236366,  2.04556394,\n",
       "        0.37227049,  4.76924476,  4.76263608,  6.41914613,  3.10006728,\n",
       "        2.19064517,  1.9092801 , -0.09295463,  4.96473487,  0.79786474,\n",
       "        0.62990695,  2.5887002 ,  5.97229671,  3.47343253,  0.95242972,\n",
       "        1.5740136 ,  4.25048993,  2.67897327,  1.4623273 ,  2.53993856,\n",
       "        4.49011253,  6.95222157,  0.51175334,  1.74716618,  1.39246781,\n",
       "       -1.83816635,  1.15241596,  0.95224848,  5.24795592,  2.73617153,\n",
       "       -0.24657089,  4.2933509 ,  2.28745848, -0.48628207,  1.80670072,\n",
       "        1.82281124,  1.2522354 ,  3.05942763, -1.49651554,  2.46447627])"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "2c23fc29-f480-4a2d-8b26-04c0c4439f81",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "c5d21f5a-74da-439e-bd0e-1864ec77dade",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'my_plot')"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(x,y)\n",
    "plt.xlabel(\"this is x axis\")\n",
    "plt.ylabel(\"this is y axis\")\n",
    "plt.title(\"my_plot\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "220e4422-f7a1-487f-b5cf-7dd23b16ecd4",
   "metadata": {},
   "source": [
    "Q3: Why is the subplot() function used? Draw four line plots using the subplot() function.\n",
    "Use the following data:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "f5b1895b-e130-448c-8fee-ce2c0d4c2ac8",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "x1 = np.array([0, 1, 2, 3, 4, 5])\n",
    "x2 = np.array([0, 1, 2, 3, 4, 5]) \n",
    "x3 = np.array([0, 1, 2, 3, 4, 5]) \n",
    "x4 = np.array([0, 1, 2, 3, 4, 5]) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "1ff19702-f29e-4661-8720-9aa10dd0ddb2",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "y1 = np.array([0, 100, 200, 300, 400, 500])\n",
    "y2 = np.array([50, 20, 40, 20, 60, 70])\n",
    "y3 = np.array([10, 20, 30, 40, 50, 60])\n",
    "y4 = np.array([200, 350, 250, 550, 450, 150])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "edb9e6c7-8c0d-4c9a-b0c4-07dbdd867576",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1, 2, 3, 4, 5])"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "3b4b36fb-3431-4c58-af6e-bac59bcb0a67",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([200, 350, 250, 550, 450, 150])"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "c9b20c8d-d397-4549-b267-bf53d0b41e7e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "a53dc322-c4a5-47d4-a512-3e861af5e18a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 1000x800 with 0 Axes>"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 1000x800 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10, 8))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "622b2c3c-fb3c-4640-8dd7-321fcf55b86b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot: >"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplot(2,2,1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "3a9a2213-79a2-4f81-a038-696cfaae9ef0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot: >"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplot(2,2,2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "f080c26f-3641-42c9-9ca5-5655da9e5651",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot: >"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplot(2,2,3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "eec52d58-5a26-4544-b400-7a7f5b40a1c7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot: >"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplot(2,2,4)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "46b1d00b-4326-45f9-9fa7-e5c198635509",
   "metadata": {},
   "source": [
    "Q4: What is a bar plot? Why is it used? Using the following data plot a bar plot and a horizontal bar plot."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "f14a8f8c-2be0-4956-b54b-bf766aeb6852",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "company = np.array([\"Apple\", \"Microsoft\", \"Google\", \"AMD\"])\n",
    "profit = np.array([3000, 8000, 1000, 10000])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "c8f9ee97-3960-42b2-ba6b-b017070790a4",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "443dc806-8926-43db-8c1b-4eb13848e6a3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 800x600 with 0 Axes>"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 800x600 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8,6))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "20b92617-e600-46ce-9f75-3b6c43c2c2b4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<BarContainer object of 4 artists>"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.bar(company,profit)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "99f99e2e-fb17-45bd-a219-205997c4d64a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 800x600 with 0 Axes>"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 800x600 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8,6))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "1e08ec70-85ba-46e6-9c31-74ca14e28576",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<BarContainer object of 4 artists>"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.barh(company,profit)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8bde0e05-65d4-41e6-b37f-316e096a8af1",
   "metadata": {},
   "source": [
    "Q5: What is a box plot? Why is it used? Using the following data plot a box plot."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "064c2932-601c-4538-93ba-1522f2489a5a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "box1 = np.random.normal(100, 10, 200)\n",
    "box2 = np.random.normal(90, 20, 200)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "9ebdc677-6474-4ef2-b4e7-58d0ce0bff17",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "49e46085-006a-486d-bfb3-da2537450bf6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 100x600 with 0 Axes>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 100x600 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(1,6))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "9f135757-ffde-4bf8-9c56-9808d6e3b97c",
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[9], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[43mplt\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mboxplot\u001b[49m\u001b[43m(\u001b[49m\u001b[43mbox1\u001b[49m\u001b[43m,\u001b[49m\u001b[43mbox2\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/matplotlib/pyplot.py:2411\u001b[0m, in \u001b[0;36mboxplot\u001b[0;34m(x, notch, sym, vert, whis, positions, widths, patch_artist, bootstrap, usermedians, conf_intervals, meanline, showmeans, showcaps, showbox, showfliers, boxprops, labels, flierprops, medianprops, meanprops, capprops, whiskerprops, manage_ticks, autorange, zorder, capwidths, data)\u001b[0m\n\u001b[1;32m   2401\u001b[0m \u001b[38;5;129m@_copy_docstring_and_deprecators\u001b[39m(Axes\u001b[38;5;241m.\u001b[39mboxplot)\n\u001b[1;32m   2402\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mboxplot\u001b[39m(\n\u001b[1;32m   2403\u001b[0m         x, notch\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, sym\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, vert\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, whis\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   2409\u001b[0m         whiskerprops\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, manage_ticks\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m, autorange\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m,\n\u001b[1;32m   2410\u001b[0m         zorder\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, capwidths\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, \u001b[38;5;241m*\u001b[39m, data\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m):\n\u001b[0;32m-> 2411\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mgca\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mboxplot\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   2412\u001b[0m \u001b[43m        \u001b[49m\u001b[43mx\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mnotch\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mnotch\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msym\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msym\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mvert\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mvert\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mwhis\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mwhis\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2413\u001b[0m \u001b[43m        \u001b[49m\u001b[43mpositions\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mpositions\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mwidths\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mwidths\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mpatch_artist\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mpatch_artist\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2414\u001b[0m \u001b[43m        \u001b[49m\u001b[43mbootstrap\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mbootstrap\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43musermedians\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43musermedians\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2415\u001b[0m \u001b[43m        \u001b[49m\u001b[43mconf_intervals\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mconf_intervals\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmeanline\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mmeanline\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2416\u001b[0m \u001b[43m        \u001b[49m\u001b[43mshowmeans\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mshowmeans\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mshowcaps\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mshowcaps\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mshowbox\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mshowbox\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2417\u001b[0m \u001b[43m        \u001b[49m\u001b[43mshowfliers\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mshowfliers\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mboxprops\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mboxprops\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlabels\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlabels\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2418\u001b[0m \u001b[43m        \u001b[49m\u001b[43mflierprops\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mflierprops\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmedianprops\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mmedianprops\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2419\u001b[0m \u001b[43m        \u001b[49m\u001b[43mmeanprops\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mmeanprops\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcapprops\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcapprops\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2420\u001b[0m \u001b[43m        \u001b[49m\u001b[43mwhiskerprops\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mwhiskerprops\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmanage_ticks\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mmanage_ticks\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2421\u001b[0m \u001b[43m        \u001b[49m\u001b[43mautorange\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mautorange\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mzorder\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mzorder\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcapwidths\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcapwidths\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2422\u001b[0m \u001b[43m        \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m{\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mdata\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mdata\u001b[49m\u001b[43m}\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mif\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mdata\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;129;43;01mis\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[38;5;129;43;01mnot\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[38;5;28;43;01melse\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43m{\u001b[49m\u001b[43m}\u001b[49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/matplotlib/__init__.py:1423\u001b[0m, in \u001b[0;36m_preprocess_data.<locals>.inner\u001b[0;34m(ax, data, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1420\u001b[0m \u001b[38;5;129m@functools\u001b[39m\u001b[38;5;241m.\u001b[39mwraps(func)\n\u001b[1;32m   1421\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21minner\u001b[39m(ax, \u001b[38;5;241m*\u001b[39margs, data\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs):\n\u001b[1;32m   1422\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m data \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m-> 1423\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[43max\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;28;43mmap\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43msanitize_sequence\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43margs\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1425\u001b[0m     bound \u001b[38;5;241m=\u001b[39m new_sig\u001b[38;5;241m.\u001b[39mbind(ax, \u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[1;32m   1426\u001b[0m     auto_label \u001b[38;5;241m=\u001b[39m (bound\u001b[38;5;241m.\u001b[39marguments\u001b[38;5;241m.\u001b[39mget(label_namer)\n\u001b[1;32m   1427\u001b[0m                   \u001b[38;5;129;01mor\u001b[39;00m bound\u001b[38;5;241m.\u001b[39mkwargs\u001b[38;5;241m.\u001b[39mget(label_namer))\n",
      "File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/matplotlib/axes/_axes.py:3946\u001b[0m, in \u001b[0;36mAxes.boxplot\u001b[0;34m(self, x, notch, sym, vert, whis, positions, widths, patch_artist, bootstrap, usermedians, conf_intervals, meanline, showmeans, showcaps, showbox, showfliers, boxprops, labels, flierprops, medianprops, meanprops, capprops, whiskerprops, manage_ticks, autorange, zorder, capwidths)\u001b[0m\n\u001b[1;32m   3943\u001b[0m                     \u001b[38;5;28;01mif\u001b[39;00m ci[\u001b[38;5;241m1\u001b[39m] \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m   3944\u001b[0m                         stats[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mcihi\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m=\u001b[39m ci[\u001b[38;5;241m1\u001b[39m]\n\u001b[0;32m-> 3946\u001b[0m artists \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mbxp\u001b[49m\u001b[43m(\u001b[49m\u001b[43mbxpstats\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mpositions\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mpositions\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mwidths\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mwidths\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3947\u001b[0m \u001b[43m                   \u001b[49m\u001b[43mvert\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mvert\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mpatch_artist\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mpatch_artist\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3948\u001b[0m \u001b[43m                   \u001b[49m\u001b[43mshownotches\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mnotch\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mshowmeans\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mshowmeans\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3949\u001b[0m \u001b[43m                   \u001b[49m\u001b[43mshowcaps\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mshowcaps\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mshowbox\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mshowbox\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3950\u001b[0m \u001b[43m                   \u001b[49m\u001b[43mboxprops\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mboxprops\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mflierprops\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mflierprops\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3951\u001b[0m \u001b[43m                   \u001b[49m\u001b[43mmedianprops\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mmedianprops\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmeanprops\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mmeanprops\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3952\u001b[0m \u001b[43m                   \u001b[49m\u001b[43mmeanline\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mmeanline\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mshowfliers\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mshowfliers\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3953\u001b[0m \u001b[43m                   \u001b[49m\u001b[43mcapprops\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcapprops\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mwhiskerprops\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mwhiskerprops\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3954\u001b[0m \u001b[43m                   \u001b[49m\u001b[43mmanage_ticks\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mmanage_ticks\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mzorder\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mzorder\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3955\u001b[0m \u001b[43m                   \u001b[49m\u001b[43mcapwidths\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcapwidths\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   3956\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m artists\n",
      "File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/matplotlib/axes/_axes.py:4165\u001b[0m, in \u001b[0;36mAxes.bxp\u001b[0;34m(self, bxpstats, positions, widths, vert, patch_artist, shownotches, showmeans, showcaps, showbox, showfliers, boxprops, whiskerprops, flierprops, medianprops, capprops, meanprops, meanline, manage_ticks, zorder, capwidths)\u001b[0m\n\u001b[1;32m   4163\u001b[0m med_y \u001b[38;5;241m=\u001b[39m [stats[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mmed\u001b[39m\u001b[38;5;124m'\u001b[39m], stats[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mmed\u001b[39m\u001b[38;5;124m'\u001b[39m]]\n\u001b[1;32m   4164\u001b[0m \u001b[38;5;66;03m# notched boxes\u001b[39;00m\n\u001b[0;32m-> 4165\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m shownotches:\n\u001b[1;32m   4166\u001b[0m     notch_left \u001b[38;5;241m=\u001b[39m pos \u001b[38;5;241m-\u001b[39m width \u001b[38;5;241m*\u001b[39m \u001b[38;5;241m0.25\u001b[39m\n\u001b[1;32m   4167\u001b[0m     notch_right \u001b[38;5;241m=\u001b[39m pos \u001b[38;5;241m+\u001b[39m width \u001b[38;5;241m*\u001b[39m \u001b[38;5;241m0.25\u001b[39m\n",
      "\u001b[0;31mValueError\u001b[0m: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.boxplot(box1,box2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6bc154e2-1033-4ec3-9b98-d9901ab502f8",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
